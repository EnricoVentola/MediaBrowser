user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    underscores_in_headers on;

    log_format main '$http_x_forwarded_for - [$time_local] '
                    '"$request" $status $bytes_sent "$http_referer" rt=$request_time';
    access_log  /var/log/nginx/access.log main;

    # Transport & performance (good defaults for large static files)
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75 20;
    client_max_body_size 30G;
    etag on;

    server {
        listen 80;
        server_name mb.ventola.me www.mb.ventola.me;

        # ---- Web root (make sure your index.html, shares.json, autoindex-*.html/css are here)
        root  /etc/nginx/html;
        index index.html;

        # ---- Optional Basic Auth
        # auth_basic           "Restricted";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        # ---- Mild security headers (safe for downloads and listings)
        add_header X-Content-Type-Options nosniff always;
        add_header Referrer-Policy no-referrer-when-downgrade always;
        add_header X-Frame-Options SAMEORIGIN always;

        # ---- Home
        location = / { try_files $uri $uri/ /index.html; }

        # Dynamic homepage data (don’t cache so edits reflect instantly)
        location = /shares.json { add_header Cache-Control "no-store"; }

        # If users land at top-level shares, send them home
        location = /shares  { return 302 /; }
        location = /shares/ { return 302 /; }

        # ===============================
        #  /shares/<id>/…  →  /mnt/<id>/…
        #  (NO symlinks, uses alias)
        # ===============================

        # 1) Allowed media: download prompt + proper Content-Length + caching
        location ~* ^/shares/([^/]+)/(.*\.(mp4|m4v|mkv|ts|avi))$ {
            alias /mnt/$1/$2;

            # UX: prompt save dialog (adjust/remove if you prefer inline playback)
            add_header Content-Disposition "attachment" always;

            # Performance/compat: avoid chunked transfer, keep Content-Length
            sendfile on; tcp_nopush on; aio off; directio 8m; gzip off; proxy_buffering off;

            # Let clients cache big files; they still get 206 range support
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";

            limit_except GET HEAD { deny all; }
        }

        # 2) Block common non-media from direct download (adjust as you like)
        location ~* ^/shares/([^/]+)/(.*\.(nfo|srt|sub|idx|txt|jpe?g|png|gif|zip|rar|7z|sfv|md))$ {
            return 403;
        }

        # 3) Directory browsing (classic <pre> autoindex; your footer injects CSS/JS)
        #    Works for /shares/<id>/ and deeper
        location ~ ^/shares/([^/]+)(/.*)?$ {
            alias /mnt/$1$2;

            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;

            # Your client-side cleanup/styling:
            add_after_body /autoindex-footer.html;

            # Optional: small HTML/CSS/JS get gzip; media stays un-gzipped in its own location
            gzip on;
            gzip_types text/plain text/css application/javascript application/json;
            gzip_vary on;
        }
        # ---- Errors
        error_page 500 502 503 504 /50x.html;
        location = /50x.html { root /etc/nginx/html; }
    }
}
